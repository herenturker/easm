#ifndef PARSER_H
#define PARSER_H

#ifdef __cplusplus
#include <string>
#include <vector>
extern "C" {
#endif

/**
 * @brief Processes a single tokenized line passed from the lexer.
 * 
 * This function takes a formatted token string (e.g., 
 * "Token: INSTR_MOV Lexeme: MOV") generated by the lexer, 
 * parses its content, and performs syntax analysis or other
 * processing depending on the token types and lexemes.
 * 
 * It is designed to be called after each line is processed by
 * the lexer and converted into a formatted string.
 * 
 * @param token_line A string containing the formatted token information 
 *                   from the lexer. Each call represents one token line.
 */
void parser_process_line(const char *token_line);

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus

struct Token {
    std::string type;
    std::string lexeme;
};

void parse_token_and_lexeme(const Token& token);

#endif // __cplusplus

#endif // PARSER_H
